user  nobody nobody ;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
#    worker_connections  1024;
    worker_connections  10;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream redis_cluster {
        server {{ redis.primary }}:{{ redis.port }} {{ redis.primary_weight }} {{ redis.primary_fail_timeout }};
        server {{ redis.secondary }}:{{ redis.port }} {{ redis.secondary_weight }} {{ redis.secondary_fail_timeout }};
    }

    server {
        # listen       10.3.0.7:80;
        listen       {{ ansible_eth0.ipv4.address }}:{{ nginx.listen_main_port }};
        server_name  uom-az-redis00;

        #charset koi8-r;

        access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location = /redis {
            redis2_next_upstream error timeout invalid_response;
            # redis2_query set foo who;
            redis2_query get foo;
            redis2_pass redis_cluster;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
